server:
  port: 8080

spring:
  application:
    name: API-GATEWAY
  main:
    web-application-type: reactive
  cloud:
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:3000"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
              - PATCH
            allowedHeaders: "*"
            allowCredentials: true
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: booking-service
          uri: lb://BOOKING-SERVICE
          predicates:
            - Path=/api/booking/**
          filters:
            - StripPrefix=1
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/api/catalog/**
          filters:
            - StripPrefix=1
        - id: review-service
          uri: lb://REVIEW-SERVICE
          predicates:
            - Path=/api/reviews/**
          filters:
            - StripPrefix=1
        - id: blog-service
          uri: lb://BLOG-SERVICE
          predicates:
            - Path=/api/blog/**
          filters:
            - StripPrefix=1
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/user/**,/api/role/**,/api/auth/**
          filters:
            - StripPrefix=1
        - id: payment-service
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/api/payment/**
          filters:
            - StripPrefix=1
        - id: blog-service
          uri: lb://BLOG-SERVICE
          predicates:
            - Path=/api/blog/**
          filters:
            - StripPrefix=1
        - id: chatbot-service
          uri: lb://CHATBOT-SERVICE
          predicates:
            - Path=/api/chat/**
          filters:
            - StripPrefix=1
    loadbalancer:
      health-check:
        interval: 5s

eureka:
  client:
    service-url:
      defaultZone: http://discovery-service:8761/eureka
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    info:
      enabled: true

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.client.loadbalancer: DEBUG
